{"ast":null,"code":"import { matchPath, Router, Switch, Route } from 'react-router';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport React from 'react';\nfunction matchRoutes(routes, pathname, /*not public API*/\nbranch) {\n  if (branch === void 0) {\n    branch = [];\n  }\n  routes.some(function (route) {\n    var match = route.path ? matchPath(pathname, route) : branch.length ? branch[branch.length - 1].match // use parent match\n    : Router.computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({\n        route: route,\n        match: match\n      });\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, branch);\n      }\n    }\n    return match;\n  });\n  return branch;\n}\nfunction renderRoutes(routes, extraProps, switchProps) {\n  if (extraProps === void 0) {\n    extraProps = {};\n  }\n  if (switchProps === void 0) {\n    switchProps = {};\n  }\n  return routes ? React.createElement(Switch, switchProps, routes.map(function (route, i) {\n    return React.createElement(Route, {\n      key: route.key || i,\n      path: route.path,\n      exact: route.exact,\n      strict: route.strict,\n      render: function render(props) {\n        return route.render ? route.render(_extends({}, props, {}, extraProps, {\n          route: route\n        })) : React.createElement(route.component, _extends({}, props, extraProps, {\n          route: route\n        }));\n      }\n    });\n  })) : null;\n}\nexport { matchRoutes, renderRoutes };","map":{"version":3,"sources":["../modules/matchRoutes.js","../modules/renderRoutes.js"],"names":["matchRoutes","routes","pathname","branch","some","match","route","path","matchPath","length","Router","computeRootMatch","push","renderRoutes","extraProps","switchProps","map","i","key","exact","strict","render","props"],"mappings":";;;AAEA,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,QAA7B,E;AAA0DC,MAA1D,EAAuE;MAAbA,MAAa,KAAA,KAAA,CAAA,EAAA;IAAbA,MAAa,GAAJ,EAAI;;EACrEF,MAAM,CAACG,IAAPH,CAAY,UAAA,KAAK,EAAI;QACbI,KAAK,GAAGC,KAAK,CAACC,IAAND,GACVE,SAAS,CAACN,QAAD,EAAWI,KAAX,CADCA,GAEVH,MAAM,CAACM,MAAPN,GACEA,MAAM,CAACA,MAAM,CAACM,MAAPN,GAAgB,CAAjB,CAANA,CAA0BE,KAD5BF,CAAAA;IAAAA,EAEEO,MAAM,CAACC,gBAAPD,CAAwBR,QAAxBQ,CAJN,CADmB,CAAA;;QAOfL,KAAJ,EAAW;MACTF,MAAM,CAACS,IAAPT,CAAY;QAAEG,KAAK,EAALA,KAAF;QAASD,KAAK,EAALA;OAArBF,CAAAA;UAEIG,KAAK,CAACL,MAAV,EAAkB;QAChBD,WAAW,CAACM,KAAK,CAACL,MAAP,EAAeC,QAAf,EAAyBC,MAAzB,CAAXH;;;WAIGK,KAAP;GAfFJ,CAAAA;SAkBOE,MAAP;;AClBF,SAASU,YAAT,CAAsBZ,MAAtB,EAA8Ba,UAA9B,EAA+CC,WAA/C,EAAiE;MAAnCD,UAAmC,KAAA,KAAA,CAAA,EAAA;IAAnCA,UAAmC,GAAtB,CAAA,CAAsB;;MAAlBC,WAAkB,KAAA,KAAA,CAAA,EAAA;IAAlBA,WAAkB,GAAJ,CAAA,CAAI;;SACxDd,MAAM,GACX,KAAA,CAAA,aAAA,CAAC,MAAD,EAAYc,WAAZ,EACG,MAAM,CAACC,GAAP,CAAW,UAACV,KAAD,EAAQW,CAAR,EAAA;WACV,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA;MACE,GAAG,EAAEX,KAAK,CAACY,GAANZ,IAAaW,CADpB;MAEE,IAAI,EAAEX,KAAK,CAACC,IAFd;MAGE,KAAK,EAAED,KAAK,CAACa,KAHf;MAIE,MAAM,EAAEb,KAAK,CAACc,MAJhB;MAKE,MAAM,EAAE,SAAA,MAAA,CAAA,KAAK,EAAA;eACX,KAAK,CAACC,MAAN,GACEf,KAAK,CAACe,MAANf,CAAAA,QAAAA,CAAAA,CAAAA,CAAAA,EAAkBgB,KAAlBhB,EAAAA,CAAAA,CAAAA,EAA4BQ,UAA5BR,EAAAA;UAAwCA,KAAK,EAAEA;WADjD,GAGE,KAAA,CAAA,aAAA,CAAC,KAAD,CAAO,SAAP,EAAA,QAAA,CAAA,CAAA,CAAA,EAAqBgB,KAArB,EAAgCR,UAAhC,EAAA;UAA4C,KAAK,EAAER;WAJ1C;;MANL;GAAX,CADH,CADW,GAkBT,IAlBJ","sourcesContent":["import { matchPath, Router } from \"react-router\";\n\nfunction matchRoutes(routes, pathname, /*not public API*/ branch = []) {\n  routes.some(route => {\n    const match = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n        ? branch[branch.length - 1].match // use parent match\n        : Router.computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({ route, match });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, branch);\n      }\n    }\n\n    return match;\n  });\n\n  return branch;\n}\n\nexport default matchRoutes;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router\";\n\nfunction renderRoutes(routes, extraProps = {}, switchProps = {}) {\n  return routes ? (\n    <Switch {...switchProps}>\n      {routes.map((route, i) => (\n        <Route\n          key={route.key || i}\n          path={route.path}\n          exact={route.exact}\n          strict={route.strict}\n          render={props =>\n            route.render ? (\n              route.render({ ...props, ...extraProps, route: route })\n            ) : (\n              <route.component {...props} {...extraProps} route={route} />\n            )\n          }\n        />\n      ))}\n    </Switch>\n  ) : null;\n}\n\nexport default renderRoutes;\n"]},"metadata":{},"sourceType":"module"}