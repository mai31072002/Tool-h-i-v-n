{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-individual\\\\reactjs\\\\tool-hai-van-frontend\\\\src\\\\app\\\\auth\\\\auth.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport PropTypes from \"prop-types\";\nimport * as userActions from \"app/auth/store/actions\";\nimport jwtService from \"app/services/jwt\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SplashScreen() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pageloader\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = SplashScreen;\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      waitAuthCheck: true\n    };\n    this.jwtCheck = () => new Promise(resolve => {\n      jwtService.on(\"onAutoLogin\", () => {\n        jwtService.signInWithRefreshToken().then(user => {\n          this.props.setUserData({\n            data: user.data,\n            role: [user.role]\n          });\n          resolve();\n        }).catch(() => {\n          resolve();\n        });\n      });\n      jwtService.on(\"onAutoLogout\", message => {\n        if (message) {\n          // this.props.showMessage({ message });\n          console.log(message);\n        }\n        this.props.logout();\n        resolve();\n      });\n      jwtService.on(\"onNoAccessToken\", () => {\n        resolve();\n      });\n      jwtService.init();\n      return Promise.resolve();\n    });\n  }\n  componentDidMount() {\n    return Promise.all([\n    // Comment the lines which you do not use\n    this.jwtCheck()]).then(() => {\n      this.setState({\n        waitAuthCheck: false\n      });\n    });\n  }\n  render() {\n    return this.state.waitAuthCheck ? /*#__PURE__*/_jsxDEV(SplashScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.props.children\n    }, void 0, false);\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    logout: userActions.logoutUser,\n    setUserData: userActions.setUserData\n  }, dispatch);\n}\nAuth.propTypes = {\n  logout: PropTypes.func,\n  setUserData: PropTypes.func,\n  children: PropTypes.element\n};\nexport default connect(null, mapDispatchToProps)(Auth);\nvar _c;\n$RefreshReg$(_c, \"SplashScreen\");","map":{"version":3,"names":["React","Component","connect","bindActionCreators","PropTypes","userActions","jwtService","jsxDEV","_jsxDEV","Fragment","_Fragment","SplashScreen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Auth","constructor","args","state","waitAuthCheck","jwtCheck","Promise","resolve","on","signInWithRefreshToken","then","user","props","setUserData","data","role","catch","message","console","log","logout","init","componentDidMount","all","setState","render","mapDispatchToProps","dispatch","logoutUser","propTypes","func","element","$RefreshReg$"],"sources":["D:/project-individual/reactjs/tool-hai-van-frontend/src/app/auth/auth.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport * as userActions from \"app/auth/store/actions\";\r\nimport jwtService from \"app/services/jwt\";\r\n\r\nfunction SplashScreen() {\r\n  return (\r\n    <div className=\"pageloader\">\r\n      <span className=\"title\">Loading...</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    waitAuthCheck: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    return Promise.all([\r\n      // Comment the lines which you do not use\r\n      this.jwtCheck(),\r\n    ]).then(() => {\r\n      this.setState({ waitAuthCheck: false });\r\n    });\r\n  }\r\n\r\n  jwtCheck = () =>\r\n    new Promise((resolve) => {\r\n      jwtService.on(\"onAutoLogin\", () => {\r\n        jwtService\r\n          .signInWithRefreshToken()\r\n          .then((user) => {\r\n            this.props.setUserData({\r\n              data: user.data,\r\n              role: [user.role],\r\n            });\r\n            resolve();\r\n          })\r\n          .catch(() => {\r\n            resolve();\r\n          });\r\n      });\r\n\r\n      jwtService.on(\"onAutoLogout\", (message) => {\r\n        if (message) {\r\n          // this.props.showMessage({ message });\r\n          console.log(message);\r\n        }\r\n\r\n        this.props.logout();\r\n\r\n        resolve();\r\n      });\r\n\r\n      jwtService.on(\"onNoAccessToken\", () => {\r\n        resolve();\r\n      });\r\n\r\n      jwtService.init();\r\n\r\n      return Promise.resolve();\r\n    });\r\n\r\n  render() {\r\n    return this.state.waitAuthCheck ? (\r\n      <SplashScreen />\r\n    ) : (\r\n      <>{this.props.children}</>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      logout: userActions.logoutUser,\r\n      setUserData: userActions.setUserData,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nAuth.propTypes = {\r\n  logout: PropTypes.func,\r\n  setUserData: PropTypes.func,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}