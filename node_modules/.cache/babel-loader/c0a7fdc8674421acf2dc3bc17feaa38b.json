{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nimport axios from \"axios\";\nimport history from \"@history\";\nimport Utils from \"app/helpers/utils\";\nimport apiConfig from \"app/configs/api.config\";\naxios.defaults.baseURL = apiConfig.baseURL;\naxios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\naxios.defaults.headers.common[\"Accept-Language\"] = \"vi\";\naxios.defaults.withCredentials = true;\ndelete axios.defaults.headers.common.Authorization;\nclass JwtService extends Utils.EventEmitter {\n  constructor(...args) {\n    super(...args);\n    this.handleAuthentication = () => {\n      const dataToken = {\n        accessToken: this.getAccessToken(),\n        refreshToken: this.getRefreshToken()\n      };\n      if (!dataToken.accessToken) {\n        this.emit(\"onNoAccessToken\");\n        return;\n      }\n      if (this.isAuthTokenValid(dataToken)) {\n        this.setSession(dataToken);\n        this.emit(\"onAutoLogin\", true);\n      } else {\n        this.setSession(null);\n        this.emit(\"onAutoLogout\", \"access_token expired\");\n      }\n    };\n    this.createUser = data => new Promise((resolve, reject) => {\n      axios.post(\"/api/auth/register\", data).then(response => {\n        if (response.data.user) {\n          this.setSession(response.data.access_token);\n          resolve(response.data.user);\n        } else {\n          reject(response.data.error);\n        }\n      });\n    });\n    this.signInWithUsernameAndPassword = param => axios.post(\"/guest/token\", param).then(res => {\n      if (res.data.status !== 200) return Promise.reject(res.data.message);\n      this.setSession(res.data.data);\n      const user = {\n        data: res.data.data,\n        role: \"USER\",\n        redirectUrl: \"/forecast\"\n      };\n      return user;\n    });\n    this.signInWithRefreshToken = () => axios.post(\"/guest/refresh-token\", {\n      refreshToken: this.getRefreshToken()\n    }).then(res => {\n      if (!res.data.data) {\n        throw new Error(\"Failed to login with refresh token.\");\n      }\n      this.setSession(res.data.data);\n      return {\n        data: res.data.data,\n        role: \"USER\"\n      };\n    }).catch(() => {\n      this.logout();\n      throw new Error(\"Failed to login with refresh token.\");\n    });\n    this.signInWithToken = async () => {\n      delete axios.defaults.headers.common.Authorization;\n      try {\n        const res = await axios.post(\"/guest/refresh-token\", {\n          refreshToken: this.getRefreshToken()\n        });\n        if (!res.data.data) {\n          this.logout();\n          throw new Error(\"Please login!!!\");\n        }\n        const dataToken = {\n          accessToken: res.data.data.accessToken,\n          refreshToken: res.data.data.refreshToken\n        };\n        this.setSession(dataToken);\n        return dataToken.accessToken;\n      } catch (error) {\n        this.logout();\n        throw new Error(\"Failed to login with refresh token.\");\n      }\n    };\n    this.updateUserData = user => axios.post(\"/api/auth/user/update\", {\n      user\n    });\n    this.setSession = dataToken => {\n      if (dataToken !== null && dataToken !== void 0 && dataToken.accessToken) {\n        window.localStorage.setItem(apiConfig.accessTokenKey, dataToken.accessToken);\n        window.localStorage.setItem(apiConfig.refreshTokenKey, dataToken.refreshToken);\n        // axios.defaults.headers.common.Authorization = `Bearer ${dataToken.accessToken}`;\n      } else {\n        window.localStorage.removeItem(apiConfig.accessTokenKey);\n        delete axios.defaults.headers.common.Authorization;\n      }\n    };\n    this.logout = () => {\n      window.localStorage.removeItem(apiConfig.accessTokenKey);\n      window.localStorage.removeItem(apiConfig.refreshTokenKey);\n      delete axios.defaults.headers.common.Authorization;\n      history.push({\n        pathname: \"/\"\n      });\n    };\n    this.isAuthTokenValid = dataToken => {\n      if (!dataToken) {\n        return false;\n      }\n      const decodedRefreshToken = jwtDecode(dataToken.refreshToken);\n      const decoded = jwtDecode(dataToken.accessToken);\n      const currentTime = Date.now() / 1000;\n      if (decoded.exp < currentTime && decodedRefreshToken.exp < currentTime) {\n        console.warn(\"access token and refresh token expired\");\n        history.push(\"/\");\n        return false;\n      }\n      return true;\n    };\n    this.isTokenExpired = () => {\n      const decodedRefreshToken = jwtDecode(window.localStorage.getItem(apiConfig.refreshTokenKey));\n      const decoded = jwtDecode(window.localStorage.getItem(apiConfig.accessTokenKey));\n      const currentTime = Date.now() / 1000;\n      if (decoded.exp < currentTime && decodedRefreshToken > currentTime) {\n        return false;\n      }\n      return true;\n    };\n    this.getAccessToken = () => window.localStorage.getItem(apiConfig.accessTokenKey);\n    this.getRefreshToken = () => window.localStorage.getItem(apiConfig.refreshTokenKey);\n  }\n  init() {\n    this.handleAuthentication();\n  }\n}\nconst instance = new JwtService();\nexport default instance;","map":{"version":3,"names":["jwtDecode","axios","history","Utils","apiConfig","defaults","baseURL","headers","common","withCredentials","Authorization","JwtService","EventEmitter","constructor","args","handleAuthentication","dataToken","accessToken","getAccessToken","refreshToken","getRefreshToken","emit","isAuthTokenValid","setSession","createUser","data","Promise","resolve","reject","post","then","response","user","access_token","error","signInWithUsernameAndPassword","param","res","status","message","role","redirectUrl","signInWithRefreshToken","Error","catch","logout","signInWithToken","updateUserData","window","localStorage","setItem","accessTokenKey","refreshTokenKey","removeItem","push","pathname","decodedRefreshToken","decoded","currentTime","Date","now","exp","console","warn","isTokenExpired","getItem","init","instance"],"sources":["D:/project-individual/reactjs/tool-hai-van-frontend/src/app/services/jwt.js"],"sourcesContent":["import jwtDecode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport history from \"@history\";\r\nimport Utils from \"app/helpers/utils\";\r\nimport apiConfig from \"app/configs/api.config\";\r\n\r\naxios.defaults.baseURL = apiConfig.baseURL;\r\naxios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\r\naxios.defaults.headers.common[\"Accept-Language\"] = \"vi\";\r\naxios.defaults.withCredentials = true;\r\ndelete axios.defaults.headers.common.Authorization;\r\n\r\nclass JwtService extends Utils.EventEmitter {\r\n  init() {\r\n    this.handleAuthentication();\r\n  }\r\n\r\n  handleAuthentication = () => {\r\n    const dataToken = {\r\n      accessToken: this.getAccessToken(),\r\n      refreshToken: this.getRefreshToken(),\r\n    };\r\n    if (!dataToken.accessToken) {\r\n      this.emit(\"onNoAccessToken\");\r\n      return;\r\n    }\r\n\r\n    if (this.isAuthTokenValid(dataToken)) {\r\n      this.setSession(dataToken);\r\n      this.emit(\"onAutoLogin\", true);\r\n    } else {\r\n      this.setSession(null);\r\n      this.emit(\"onAutoLogout\", \"access_token expired\");\r\n    }\r\n  };\r\n\r\n  createUser = (data) =>\r\n    new Promise((resolve, reject) => {\r\n      axios.post(\"/api/auth/register\", data).then((response) => {\r\n        if (response.data.user) {\r\n          this.setSession(response.data.access_token);\r\n          resolve(response.data.user);\r\n        } else {\r\n          reject(response.data.error);\r\n        }\r\n      });\r\n    });\r\n\r\n  signInWithUsernameAndPassword = (param) =>\r\n    axios.post(\"/guest/token\", param).then((res) => {\r\n      if (res.data.status !== 200) return Promise.reject(res.data.message);\r\n      this.setSession(res.data.data);\r\n      const user = {\r\n        data: res.data.data,\r\n        role: \"USER\",\r\n        redirectUrl: \"/forecast\",\r\n      };\r\n      return user;\r\n    });\r\n\r\n  signInWithRefreshToken = () =>\r\n    axios\r\n      .post(\"/guest/refresh-token\", { refreshToken: this.getRefreshToken() })\r\n      .then((res) => {\r\n        if (!res.data.data) {\r\n          throw new Error(\"Failed to login with refresh token.\");\r\n        }\r\n        this.setSession(res.data.data);\r\n        return {\r\n          data: res.data.data,\r\n          role: \"USER\",\r\n        };\r\n      })\r\n      .catch(() => {\r\n        this.logout();\r\n        throw new Error(\"Failed to login with refresh token.\");\r\n      });\r\n\r\n  signInWithToken = async () => {\r\n    delete axios.defaults.headers.common.Authorization;\r\n    try {\r\n      const res = await axios.post(\"/guest/refresh-token\", {\r\n        refreshToken: this.getRefreshToken(),\r\n      });\r\n      if (!res.data.data) {\r\n        this.logout();\r\n        throw new Error(\"Please login!!!\");\r\n      }\r\n      const dataToken = {\r\n        accessToken: res.data.data.accessToken,\r\n        refreshToken: res.data.data.refreshToken,\r\n      };\r\n      this.setSession(dataToken);\r\n      return dataToken.accessToken;\r\n    } catch (error) {\r\n      this.logout();\r\n      throw new Error(\"Failed to login with refresh token.\");\r\n    }\r\n  };\r\n  updateUserData = (user) => axios.post(\"/api/auth/user/update\", { user });\r\n\r\n  setSession = (dataToken) => {\r\n    if (dataToken?.accessToken) {\r\n      window.localStorage.setItem(\r\n        apiConfig.accessTokenKey,\r\n        dataToken.accessToken\r\n      );\r\n      window.localStorage.setItem(\r\n        apiConfig.refreshTokenKey,\r\n        dataToken.refreshToken\r\n      );\r\n      // axios.defaults.headers.common.Authorization = `Bearer ${dataToken.accessToken}`;\r\n    } else {\r\n      window.localStorage.removeItem(apiConfig.accessTokenKey);\r\n      delete axios.defaults.headers.common.Authorization;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    window.localStorage.removeItem(apiConfig.accessTokenKey);\r\n    window.localStorage.removeItem(apiConfig.refreshTokenKey);\r\n    delete axios.defaults.headers.common.Authorization;\r\n    history.push({\r\n      pathname: \"/\",\r\n    });\r\n  };\r\n\r\n  isAuthTokenValid = (dataToken) => {\r\n    if (!dataToken) {\r\n      return false;\r\n    }\r\n    const decodedRefreshToken = jwtDecode(dataToken.refreshToken);\r\n    const decoded = jwtDecode(dataToken.accessToken);\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime && decodedRefreshToken.exp < currentTime) {\r\n      console.warn(\"access token and refresh token expired\");\r\n      history.push(\"/\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  isTokenExpired = () => {\r\n    const decodedRefreshToken = jwtDecode(\r\n      window.localStorage.getItem(apiConfig.refreshTokenKey)\r\n    );\r\n    const decoded = jwtDecode(\r\n      window.localStorage.getItem(apiConfig.accessTokenKey)\r\n    );\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime && decodedRefreshToken > currentTime) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  getAccessToken = () => window.localStorage.getItem(apiConfig.accessTokenKey);\r\n  getRefreshToken = () =>\r\n    window.localStorage.getItem(apiConfig.refreshTokenKey);\r\n}\r\n\r\nconst instance = new JwtService();\r\n\r\nexport default instance;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}