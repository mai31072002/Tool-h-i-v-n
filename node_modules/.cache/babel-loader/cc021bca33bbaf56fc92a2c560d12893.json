{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-individual\\\\reactjs\\\\tool-hai-van-frontend\\\\src\\\\app\\\\main\\\\forecast\\\\components\\\\DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Col, Row, Table, Dropdown } from \"antd\";\nimport moment from \"moment\";\nimport jsPDF from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { DownloadOutlined } from \"@ant-design/icons\";\nimport { usePapaParse } from \"react-papaparse\";\nimport * as FileSaver from \"file-saver\";\nimport XLSX from \"sheetjs-style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = ({\n  customerCode,\n  dataForecast,\n  nameTable\n}) => {\n  _s();\n  const {\n    jsonToCSV\n  } = usePapaParse();\n  const [tableParams, setTableParams] = useState({\n    pagination: {\n      current: 1,\n      pageSize: 20\n    }\n  });\n  useEffect(() => {\n    if ((dataForecast === null || dataForecast === void 0 ? void 0 : dataForecast.data) !== null) {\n      setTableParams(prevParams => ({\n        ...prevParams,\n        pagination: {\n          ...prevParams.pagination,\n          total: dataForecast.data.length\n        }\n      }));\n    }\n  }, [dataForecast === null || dataForecast === void 0 ? void 0 : dataForecast.data]);\n  const handleTableChange = (pagination, filters, sorter) => {\n    setTableParams({\n      pagination,\n      filters,\n      ...sorter\n    });\n  };\n  const columns = [{\n    key: \"stt\",\n    title: \"No.\",\n    dataIndex: \"capacity\",\n    width: 50,\n    render: (_, record, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: index + 1\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }, this)\n  }, {\n    key: \"deviceName\",\n    title: \"Device Name\",\n    width: 100,\n    render: () => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: customerCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this)\n  }, {\n    key: \"dateRange\",\n    title: \"Date Range\",\n    dataIndex: [\"fromTime\", \"toTime\"],\n    width: 180,\n    render: (_, record, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: `${moment(record === null || record === void 0 ? void 0 : record.fromTime, \"YYYY-MM-DDTHH:mm:ss\").format(\"HH:mm\")} - ${moment(record === null || record === void 0 ? void 0 : record.toTime, \"YYYY-MM-DDTHH:mm:ss\").format(\"HH:mm DD-MM-YYYY\")}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, {\n    key: \"forecast\",\n    title: \"Avg Average Wind Speed in 3 Seconds(m/s)\",\n    dataIndex: \"forecast\",\n    width: 100\n  }];\n  const handleDownloadFileCsv = () => {\n    var _dataForecast$data;\n    const dataPowerForecast = dataForecast === null || dataForecast === void 0 ? void 0 : (_dataForecast$data = dataForecast.data) === null || _dataForecast$data === void 0 ? void 0 : _dataForecast$data.map(point => ({\n      \"Device Name\": customerCode,\n      \"Date Range\": `${moment(point.fromTime, \"YYYY-MM-DDTHH:mm:ss\").format(\"HH:mm\")}-${moment(point.toTime, \"YYYY-MM-DDTHH:mm:ss\").format(\"HH:mm DD-MM-YYYY\")}`,\n      \"Avg Average Wind Speed in 3 Seconds(m/s)\": point.forecast\n    }));\n    const csvDataForecast = jsonToCSV(dataPowerForecast);\n    // Tạo Blob và lưu file\n    const combineCSV = `Sheet,Forecast\\n${csvDataForecast}`;\n    const data = new Blob([combineCSV], {\n      type: \"text/csv;charset=utf-8\"\n    });\n    FileSaver.saveAs(data, `${moment(dataForecast === null || dataForecast === void 0 ? void 0 : dataForecast.data[0].fromTime, \"YYYY-MM-DDTHH:mm:ss\").format(\"YYYYMMDDHHmm\")}-Data-Wind-Power-Capacity-CSV.csv`);\n  };\n  const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const handleDownloadFileXLSX = () => {\n    var _dataForecast$data2;\n    const dataPowerForecast = dataForecast === null || dataForecast === void 0 ? void 0 : (_dataForecast$data2 = dataForecast.data) === null || _dataForecast$data2 === void 0 ? void 0 : _dataForecast$data2.map(point => ({\n      \"Device Name\": customerCode,\n      \"Date Range\": `${moment(point.fromTime, \"YYYY-MM-DDTHH:mm:ss\").format(\"HH:mm\")}-${moment(point.toTime, \"YYYY-MM-DDTHH:mm:ss\").format(\"HH:mm DD-MM-YYYY\")}`,\n      \"Avg Average Wind Speed in 3 Seconds(m/s)\": point.forecast\n    }));\n    const wsDataPowerForecast = XLSX.utils.json_to_sheet(dataPowerForecast);\n    const wb = {\n      Sheets: {\n        Forecast: wsDataPowerForecast\n      },\n      SheetNames: [\"Forecast\"]\n    };\n    const excelBuffer = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    FileSaver.saveAs(data, `${moment(dataForecast === null || dataForecast === void 0 ? void 0 : dataForecast.data[0].fromTime, \"YYYY-MM-DDTHH:mm:ss\").format(\"YYYYMMDDHHmm\")}-Data-Wind-Power-Capacity-XLSX.xlsx`);\n  };\n  const handleGeneratePDF = () => {\n    var _dataForecast$data3;\n    const doc = new jsPDF();\n    const pdfData = dataForecast === null || dataForecast === void 0 ? void 0 : (_dataForecast$data3 = dataForecast.data) === null || _dataForecast$data3 === void 0 ? void 0 : _dataForecast$data3.map((item, index) => ({\n      stt: `${index + 1}`,\n      deviceName: customerCode,\n      dateRange: `${moment(item.fromTime, \"YYYY-MM-DDTHH:mm:ss\").format(\"HH:mm\")} - ${moment(item.toTime, \"YYYY-MM-DDTHH:mm:ss\").format(\"HH:mm DD-MM-YYYY\")}`,\n      forecast: `${item.forecast}`\n    }));\n    const colHeader = columns.map(col => ({\n      header: col.title,\n      dataKey: col.key\n    }));\n    console.log(\"PDF Data:\", pdfData);\n    console.log(\"colHeader:\", colHeader);\n    autoTable(doc, {\n      body: pdfData,\n      columns: colHeader,\n      theme: \"grid\",\n      headStyles: {\n        font: \"Inter\",\n        halign: \"center\",\n        fillColor: \"#777777\"\n      },\n      bodyStyles: {\n        font: \"Inter\",\n        halign: \"center\",\n        textColor: \"#000000\"\n      },\n      didDrawPage: function (data) {\n        doc.setFontSize(14);\n        doc.setFont(\"Inter\", \"normal\", \"400\");\n        doc.text(`${nameTable} Forecast`, data.settings.margin.right, 10, {\n          halign: \"center\",\n          valign: \"center\"\n        });\n      }\n    });\n    doc.save(\"forecast.pdf\");\n  };\n  const items = [{\n    key: \"1\",\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleDownloadFileCsv(),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \".csv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)\n  }, {\n    key: \"2\",\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleDownloadFileXLSX(),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \".xlsx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)\n  }, {\n    key: \"3\",\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleGeneratePDF(),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \".pdf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"container-table-data-forecast\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      className: \"content-table-data-forecast\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          className: \"content-title-table\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  span: 24,\n                  className: \"title-table-data-forecast\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Power Forecast data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 24,\n                  className: \"note-table-data-forecast\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Last updated: 11:50 AM, Jan 7, 2024\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              className: \"content-btn-download-document\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  span: 4,\n                  className: \"container-btn-download-vis\",\n                  children: /*#__PURE__*/_jsxDEV(Dropdown, {\n                    menu: {\n                      items\n                    },\n                    trigger: [\"click\"],\n                    className: \"btn-download-document\",\n                    children: /*#__PURE__*/_jsxDEV(DownloadOutlined, {\n                      className: \"icon-download-document\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          className: \"name-table-data-forecast\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [nameTable, \" FORECAST\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            columns: columns,\n            dataSource: dataForecast === null || dataForecast === void 0 ? void 0 : dataForecast.data,\n            pagination: tableParams.pagination,\n            onChange: handleTableChange,\n            className: \"table-data-forecast\",\n            id: \"table-forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"HmggvnNAoABPYcwqRo/RxZvXKSU=\", false, function () {\n  return [usePapaParse];\n});\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","useEffect","Col","Row","Table","Dropdown","moment","jsPDF","autoTable","DownloadOutlined","usePapaParse","FileSaver","XLSX","jsxDEV","_jsxDEV","DataTable","customerCode","dataForecast","nameTable","_s","jsonToCSV","tableParams","setTableParams","pagination","current","pageSize","data","prevParams","total","length","handleTableChange","filters","sorter","columns","key","title","dataIndex","width","render","_","record","index","children","fileName","_jsxFileName","lineNumber","columnNumber","fromTime","format","toTime","handleDownloadFileCsv","_dataForecast$data","dataPowerForecast","map","point","forecast","csvDataForecast","combineCSV","Blob","type","saveAs","fileType","handleDownloadFileXLSX","_dataForecast$data2","wsDataPowerForecast","utils","json_to_sheet","wb","Sheets","Forecast","SheetNames","excelBuffer","write","bookType","handleGeneratePDF","_dataForecast$data3","doc","pdfData","item","stt","deviceName","dateRange","colHeader","col","header","dataKey","console","log","body","theme","headStyles","font","halign","fillColor","bodyStyles","textColor","didDrawPage","setFontSize","setFont","text","settings","margin","right","valign","save","items","label","onClick","className","span","menu","trigger","dataSource","onChange","id","_c","$RefreshReg$"],"sources":["D:/project-individual/reactjs/tool-hai-van-frontend/src/app/main/forecast/components/DataTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Col, Row, Table, Dropdown } from \"antd\";\r\nimport moment from \"moment\";\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport { DownloadOutlined } from \"@ant-design/icons\";\r\nimport { usePapaParse } from \"react-papaparse\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport XLSX from \"sheetjs-style\";\r\n\r\nconst DataTable = ({ customerCode, dataForecast, nameTable }) => {\r\n  const { jsonToCSV } = usePapaParse();\r\n  const [tableParams, setTableParams] = useState({\r\n    pagination: {\r\n      current: 1,\r\n      pageSize: 20,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataForecast?.data !== null) {\r\n      setTableParams((prevParams) => ({\r\n        ...prevParams,\r\n        pagination: {\r\n          ...prevParams.pagination,\r\n          total: dataForecast.data.length,\r\n        },\r\n      }));\r\n    }\r\n  }, [dataForecast?.data]);\r\n\r\n  const handleTableChange = (pagination, filters, sorter) => {\r\n    setTableParams({\r\n      pagination,\r\n      filters,\r\n      ...sorter,\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      key: \"stt\",\r\n      title: \"No.\",\r\n      dataIndex: \"capacity\",\r\n      width: 50,\r\n      render: (_, record, index) => <span key={index}>{index + 1}</span>,\r\n    },\r\n    {\r\n      key: \"deviceName\",\r\n      title: \"Device Name\",\r\n      width: 100,\r\n      render: () => <span>{customerCode}</span>,\r\n    },\r\n    {\r\n      key: \"dateRange\",\r\n      title: \"Date Range\",\r\n      dataIndex: [\"fromTime\", \"toTime\"],\r\n      width: 180,\r\n      render: (_, record, index) => (\r\n        <span key={index}>{`${moment(\r\n          record?.fromTime,\r\n          \"YYYY-MM-DDTHH:mm:ss\"\r\n        ).format(\"HH:mm\")} - ${moment(\r\n          record?.toTime,\r\n          \"YYYY-MM-DDTHH:mm:ss\"\r\n        ).format(\"HH:mm DD-MM-YYYY\")}`}</span>\r\n      ),\r\n    },\r\n    {\r\n      key: \"forecast\",\r\n      title: \"Avg Average Wind Speed in 3 Seconds(m/s)\",\r\n      dataIndex: \"forecast\",\r\n      width: 100,\r\n    },\r\n  ];\r\n  const handleDownloadFileCsv = () => {\r\n    const dataPowerForecast = dataForecast?.data?.map((point) => ({\r\n      \"Device Name\": customerCode,\r\n      \"Date Range\": `${moment(point.fromTime, \"YYYY-MM-DDTHH:mm:ss\").format(\r\n        \"HH:mm\"\r\n      )}-${moment(point.toTime, \"YYYY-MM-DDTHH:mm:ss\").format(\r\n        \"HH:mm DD-MM-YYYY\"\r\n      )}`,\r\n      \"Avg Average Wind Speed in 3 Seconds(m/s)\": point.forecast,\r\n    }));\r\n    const csvDataForecast = jsonToCSV(dataPowerForecast);\r\n    // Tạo Blob và lưu file\r\n    const combineCSV = `Sheet,Forecast\\n${csvDataForecast}`;\r\n    const data = new Blob([combineCSV], { type: \"text/csv;charset=utf-8\" });\r\n\r\n    FileSaver.saveAs(\r\n      data,\r\n      `${moment(dataForecast?.data[0].fromTime, \"YYYY-MM-DDTHH:mm:ss\").format(\r\n        \"YYYYMMDDHHmm\"\r\n      )}-Data-Wind-Power-Capacity-CSV.csv`\r\n    );\r\n  };\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const handleDownloadFileXLSX = () => {\r\n    const dataPowerForecast = dataForecast?.data?.map((point) => ({\r\n      \"Device Name\": customerCode,\r\n      \"Date Range\": `${moment(point.fromTime, \"YYYY-MM-DDTHH:mm:ss\").format(\r\n        \"HH:mm\"\r\n      )}-${moment(point.toTime, \"YYYY-MM-DDTHH:mm:ss\").format(\r\n        \"HH:mm DD-MM-YYYY\"\r\n      )}`,\r\n      \"Avg Average Wind Speed in 3 Seconds(m/s)\": point.forecast,\r\n    }));\r\n    const wsDataPowerForecast = XLSX.utils.json_to_sheet(dataPowerForecast);\r\n    const wb = {\r\n      Sheets: {\r\n        Forecast: wsDataPowerForecast,\r\n      },\r\n      SheetNames: [\"Forecast\"],\r\n    };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(\r\n      data,\r\n      `${moment(dataForecast?.data[0].fromTime, \"YYYY-MM-DDTHH:mm:ss\").format(\r\n        \"YYYYMMDDHHmm\"\r\n      )}-Data-Wind-Power-Capacity-XLSX.xlsx`\r\n    );\r\n  };\r\n  const handleGeneratePDF = () => {\r\n    const doc = new jsPDF();\r\n    const pdfData = dataForecast?.data?.map((item, index) => ({\r\n      stt: `${index + 1}`,\r\n      deviceName: customerCode,\r\n      dateRange: `${moment(item.fromTime, \"YYYY-MM-DDTHH:mm:ss\").format(\r\n        \"HH:mm\"\r\n      )} - ${moment(item.toTime, \"YYYY-MM-DDTHH:mm:ss\").format(\r\n        \"HH:mm DD-MM-YYYY\"\r\n      )}`,\r\n      forecast: `${item.forecast}`,\r\n    }));\r\n    const colHeader = columns.map((col) => ({\r\n      header: col.title,\r\n      dataKey: col.key,\r\n    }));\r\n    console.log(\"PDF Data:\", pdfData);\r\n    console.log(\"colHeader:\", colHeader);\r\n    autoTable(doc, {\r\n      body: pdfData,\r\n      columns: colHeader,\r\n      theme: \"grid\",\r\n      headStyles: { font: \"Inter\", halign: \"center\", fillColor: \"#777777\" },\r\n      bodyStyles: { font: \"Inter\", halign: \"center\", textColor: \"#000000\" },\r\n      didDrawPage: function (data) {\r\n        doc.setFontSize(14);\r\n        doc.setFont(\"Inter\", \"normal\", \"400\");\r\n        doc.text(`${nameTable} Forecast`, data.settings.margin.right, 10, {\r\n          halign: \"center\",\r\n          valign: \"center\",\r\n        });\r\n      },\r\n    });\r\n\r\n    doc.save(\"forecast.pdf\");\r\n  };\r\n  const items = [\r\n    {\r\n      key: \"1\",\r\n      label: (\r\n        <div onClick={() => handleDownloadFileCsv()}>\r\n          <span>.csv</span>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"2\",\r\n      label: (\r\n        <div onClick={() => handleDownloadFileXLSX()}>\r\n          <span>.xlsx</span>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: \"3\",\r\n      label: (\r\n        <div onClick={() => handleGeneratePDF()}>\r\n          <span>.pdf</span>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <Row className={\"container-table-data-forecast\"}>\r\n      <Col span={24} className={\"content-table-data-forecast\"}>\r\n        <Row>\r\n          <Col span={24} className={\"content-title-table\"}>\r\n            <Row>\r\n              <Col span={12}>\r\n                <Row>\r\n                  <Col span={24} className={\"title-table-data-forecast\"}>\r\n                    <span>Power Forecast data</span>\r\n                  </Col>\r\n                  <Col span={24} className={\"note-table-data-forecast\"}>\r\n                    <span>Last updated: 11:50 AM, Jan 7, 2024</span>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col span={12} className={\"content-btn-download-document\"}>\r\n                <Row>\r\n                  <Col span={4} className={\"container-btn-download-vis\"}>\r\n                    <Dropdown\r\n                      menu={{ items }}\r\n                      trigger={[\"click\"]}\r\n                      className={\"btn-download-document\"}\r\n                    >\r\n                      <DownloadOutlined className={\"icon-download-document\"} />\r\n                    </Dropdown>\r\n                    {/*<Button className={\"btn-download-document\"} onClick={handleGeneratePDF}>*/}\r\n                    {/*    <DownloadOutlined className={\"icon-download-document\"}/>*/}\r\n                    {/*</Button>*/}\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col span={24} className={\"name-table-data-forecast\"}>\r\n            <span>{nameTable} FORECAST</span>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Table\r\n              columns={columns}\r\n              dataSource={dataForecast?.data}\r\n              pagination={tableParams.pagination}\r\n              onChange={handleTableChange}\r\n              className={\"table-data-forecast\"}\r\n              id={\"table-forecast\"}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}